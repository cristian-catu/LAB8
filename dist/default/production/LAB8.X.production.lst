

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Sat Apr 16 14:42:31 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.40
    23                           ; Generated 17/11/2021 GMT
    24                           ; 
    25                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  0105                     	;# 
   199  0107                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0185                     	;# 
   208  0187                     	;# 
   209  0188                     	;# 
   210  0189                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213  0000                     	;# 
   214  0001                     	;# 
   215  0002                     	;# 
   216  0003                     	;# 
   217  0004                     	;# 
   218  0005                     	;# 
   219  0006                     	;# 
   220  0007                     	;# 
   221  0008                     	;# 
   222  0009                     	;# 
   223  000A                     	;# 
   224  000B                     	;# 
   225  000C                     	;# 
   226  000D                     	;# 
   227  000E                     	;# 
   228  000E                     	;# 
   229  000F                     	;# 
   230  0010                     	;# 
   231  0011                     	;# 
   232  0012                     	;# 
   233  0013                     	;# 
   234  0014                     	;# 
   235  0015                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  001D                     	;# 
   246  001E                     	;# 
   247  001F                     	;# 
   248  0081                     	;# 
   249  0085                     	;# 
   250  0086                     	;# 
   251  0087                     	;# 
   252  0088                     	;# 
   253  0089                     	;# 
   254  008C                     	;# 
   255  008D                     	;# 
   256  008E                     	;# 
   257  008F                     	;# 
   258  0090                     	;# 
   259  0091                     	;# 
   260  0092                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0094                     	;# 
   265  0095                     	;# 
   266  0096                     	;# 
   267  0097                     	;# 
   268  0098                     	;# 
   269  0099                     	;# 
   270  009A                     	;# 
   271  009B                     	;# 
   272  009C                     	;# 
   273  009D                     	;# 
   274  009E                     	;# 
   275  009F                     	;# 
   276  0105                     	;# 
   277  0107                     	;# 
   278  0108                     	;# 
   279  0109                     	;# 
   280  010C                     	;# 
   281  010C                     	;# 
   282  010D                     	;# 
   283  010E                     	;# 
   284  010F                     	;# 
   285  0185                     	;# 
   286  0187                     	;# 
   287  0188                     	;# 
   288  0189                     	;# 
   289  018C                     	;# 
   290  018D                     	;# 
   291                           
   292                           	psect	idataBANK0
   293  0298                     __pidataBANK0:
   294                           
   295                           ;initializer for main@F1309
   296  0298  343F               	retlw	63
   297  0299  3400               	retlw	0
   298  029A  3406               	retlw	6
   299  029B  3400               	retlw	0
   300  029C  345B               	retlw	91
   301  029D  3400               	retlw	0
   302  029E  344F               	retlw	79
   303  029F  3400               	retlw	0
   304  02A0  3466               	retlw	102
   305  02A1  3400               	retlw	0
   306  02A2  346D               	retlw	109
   307  02A3  3400               	retlw	0
   308  02A4  347D               	retlw	125
   309  02A5  3400               	retlw	0
   310  02A6  3407               	retlw	7
   311  02A7  3400               	retlw	0
   312  02A8  347F               	retlw	127
   313  02A9  3400               	retlw	0
   314  02AA  346F               	retlw	111
   315  02AB  3400               	retlw	0
   316                           
   317                           ;initializer for _i
   318  02AC  3401               	retlw	1
   319  0005                     _PORTA	set	5
   320  0007                     _PORTCbits	set	7
   321  0001                     _TMR0	set	1
   322  0007                     _PORTC	set	7
   323  0008                     _PORTD	set	8
   324  000B                     _INTCONbits	set	11
   325  001E                     _ADRESH	set	30
   326  0006                     _PORTB	set	6
   327  001F                     _ADCON0bits	set	31
   328  000C                     _PIR1bits	set	12
   329  0081                     _OPTION_REGbits	set	129
   330  008C                     _PIE1bits	set	140
   331  009F                     _ADCON1bits	set	159
   332  008F                     _OSCCONbits	set	143
   333  0086                     _TRISB	set	134
   334  0088                     _TRISD	set	136
   335  0087                     _TRISC	set	135
   336  0085                     _TRISA	set	133
   337  0189                     _ANSELH	set	393
   338  0188                     _ANSEL	set	392
   339                           
   340                           	psect	cinit
   341  0013                     start_initialization:	
   342                           ; #config settings
   343                           
   344  0013                     __initialization:
   345                           
   346                           ; Initialize objects allocated to BANK0
   347  0013  1383               	bcf	3,7	;select IRP bank0
   348  0014  3053               	movlw	low (__pdataBANK0+21)
   349  0015  00FD               	movwf	btemp+-1
   350  0016  3002               	movlw	high __pidataBANK0
   351  0017  00FE               	movwf	btemp
   352  0018  3098               	movlw	low __pidataBANK0
   353  0019  00FF               	movwf	btemp+1
   354  001A  303E               	movlw	low __pdataBANK0
   355  001B  0084               	movwf	4
   356  001C  120A  118A  22B1  120A  118A  	fcall	init_ram0
   357                           
   358                           ; Clear objects allocated to BANK0
   359  0021  01D3               	clrf	__pbssBANK0& (0+127)
   360  0022  01D4               	clrf	(__pbssBANK0+1)& (0+127)
   361  0023  01D5               	clrf	(__pbssBANK0+2)& (0+127)
   362  0024  01D6               	clrf	(__pbssBANK0+3)& (0+127)
   363  0025  01D7               	clrf	(__pbssBANK0+4)& (0+127)
   364  0026  01D8               	clrf	(__pbssBANK0+5)& (0+127)
   365  0027  01D9               	clrf	(__pbssBANK0+6)& (0+127)
   366  0028  01DA               	clrf	(__pbssBANK0+7)& (0+127)
   367                           
   368                           ; Clear objects allocated to COMMON
   369  0029  01F9               	clrf	__pbssCOMMON& (0+127)
   370  002A  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   371  002B  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   372  002C  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
   373  002D  01FD               	clrf	(__pbssCOMMON+4)& (0+127)
   374  002E                     end_of_initialization:	
   375                           ;End of C runtime variable initialization code
   376                           
   377  002E                     __end_of__initialization:
   378  002E  0183               	clrf	3
   379  002F  120A  118A  2990   	ljmp	_main	;jump to C main() function
   380                           
   381                           	psect	bssCOMMON
   382  0079                     __pbssCOMMON:
   383  0079                     _remainder:
   384  0079                     	ds	1
   385  007A                     _valor:
   386  007A                     	ds	1
   387  007B                     _centenas:
   388  007B                     	ds	1
   389  007C                     _decenas:
   390  007C                     	ds	1
   391  007D                     _unidades:
   392  007D                     	ds	1
   393                           
   394                           	psect	bssBANK0
   395  0053                     __pbssBANK0:
   396  0053                     _display_centenas:
   397  0053                     	ds	1
   398  0054                     _display_decenas:
   399  0054                     	ds	1
   400  0055                     _display_unidades:
   401  0055                     	ds	1
   402  0056                     _centenas3:
   403  0056                     	ds	1
   404  0057                     _decenas3:
   405  0057                     	ds	1
   406  0058                     _centenas2:
   407  0058                     	ds	1
   408  0059                     _decenas2:
   409  0059                     	ds	1
   410  005A                     _unidades2:
   411  005A                     	ds	1
   412                           
   413                           	psect	dataBANK0
   414  003E                     __pdataBANK0:
   415  003E                     main@F1309:
   416  003E                     	ds	20
   417  0052                     _i:
   418  0052                     	ds	1
   419                           
   420                           	psect	inittext
   421  02AD                     init_fetch0:	
   422                           ;	Called with low address in FSR and high address in W
   423                           
   424  02AD  087E               	movf	btemp,w
   425  02AE  008A               	movwf	10
   426  02AF  087F               	movf	btemp+1,w
   427  02B0  0082               	movwf	2
   428  02B1                     init_ram0:	
   429                           ;Called with:
   430                           ;	high address of idata address in btemp 
   431                           ;	low address of idata address in btemp+1 
   432                           ;	low address of data in FSR
   433                           ;	high address + 1 of data in btemp-1
   434                           
   435  02B1  120A  118A  22AD  120A  118A  	fcall	init_fetch0
   436  02B6  0080               	movwf	0
   437  02B7  0A84               	incf	4,f
   438  02B8  0804               	movf	4,w
   439  02B9  067D               	xorwf	btemp+-1,w
   440  02BA  1903               	btfsc	3,2
   441  02BB  3400               	retlw	0
   442  02BC  0AFF               	incf	btemp+1,f
   443  02BD  1903               	btfsc	3,2
   444  02BE  0AFE               	incf	btemp,f
   445  02BF  2AB1               	goto	init_ram0
   446                           
   447                           	psect	cstackCOMMON
   448  0070                     __pcstackCOMMON:
   449  0070                     ?_setup:
   450  0070                     ?_isr:	
   451                           ; 1 bytes @ 0x0
   452                           
   453  0070                     ?_main:	
   454                           ; 1 bytes @ 0x0
   455                           
   456  0070                     ?___awdiv:	
   457                           ; 1 bytes @ 0x0
   458                           
   459  0070                     ?___awmod:	
   460                           ; 2 bytes @ 0x0
   461                           
   462  0070                     ___awdiv@divisor:	
   463                           ; 2 bytes @ 0x0
   464                           
   465  0070                     ___awmod@divisor:	
   466                           ; 2 bytes @ 0x0
   467                           
   468                           
   469                           ; 2 bytes @ 0x0
   470  0070                     	ds	2
   471  0072                     ___awdiv@dividend:
   472  0072                     ___awmod@dividend:	
   473                           ; 2 bytes @ 0x2
   474                           
   475                           
   476                           ; 2 bytes @ 0x2
   477  0072                     	ds	2
   478  0074                     ??___awdiv:
   479  0074                     ??___awmod:	
   480                           ; 1 bytes @ 0x4
   481                           
   482                           
   483                           ; 1 bytes @ 0x4
   484  0074                     	ds	1
   485  0075                     ___awdiv@counter:
   486  0075                     ___awmod@counter:	
   487                           ; 1 bytes @ 0x5
   488                           
   489                           
   490                           ; 1 bytes @ 0x5
   491  0075                     	ds	1
   492  0076                     ___awdiv@sign:
   493  0076                     ___awmod@sign:	
   494                           ; 1 bytes @ 0x6
   495                           
   496                           
   497                           ; 1 bytes @ 0x6
   498  0076                     	ds	1
   499  0077                     ___awdiv@quotient:
   500                           
   501                           ; 2 bytes @ 0x7
   502  0077                     	ds	2
   503                           
   504                           	psect	cstackBANK0
   505  0020                     __pcstackBANK0:
   506  0020                     ??_isr:
   507                           
   508                           ; 1 bytes @ 0x0
   509  0020                     	ds	6
   510  0026                     ??_setup:
   511  0026                     ??_main:	
   512                           ; 1 bytes @ 0x6
   513                           
   514                           
   515                           ; 1 bytes @ 0x6
   516  0026                     	ds	4
   517  002A                     main@tabla:
   518                           
   519                           ; 20 bytes @ 0xA
   520  002A                     	ds	20
   521                           
   522                           	psect	maintext
   523  0190                     __pmaintext:	
   524 ;;
   525 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   526 ;;
   527 ;; *************** function _main *****************
   528 ;; Defined at:
   529 ;;		line 108 in file "main.c"
   530 ;; Parameters:    Size  Location     Type
   531 ;;		None
   532 ;; Auto vars:     Size  Location     Type
   533 ;;  tabla          20   10[BANK0 ] int [10]
   534 ;; Return value:  Size  Location     Type
   535 ;;                  1    wreg      void 
   536 ;; Registers used:
   537 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   538 ;; Tracked objects:
   539 ;;		On entry : B00/0
   540 ;;		On exit  : 0/0
   541 ;;		Unchanged: 0/0
   542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   543 ;;      Params:         0       0       0       0       0
   544 ;;      Locals:         0      20       0       0       0
   545 ;;      Temps:          0       4       0       0       0
   546 ;;      Totals:         0      24       0       0       0
   547 ;;Total ram usage:       24 bytes
   548 ;; Hardware stack levels required when called: 3
   549 ;; This function calls:
   550 ;;		_setup
   551 ;; This function is called by:
   552 ;;		Startup code after reset
   553 ;; This function uses a non-reentrant model
   554 ;;
   555                           
   556  0190                     _main:	
   557                           ;psect for function _main
   558                           
   559  0190                     l1151:	
   560                           ;incstack = 0
   561                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   562                           
   563                           
   564                           ;main.c: 109:     setup();
   565  0190  120A  118A  224D  120A  118A  	fcall	_setup
   566  0195                     l1153:
   567                           
   568                           ;main.c: 110:     int tabla[10] = {63, 6, 91, 79, 102, 109, 125, 7, 127, 111};
   569  0195  302A               	movlw	main@tabla& (0+255)
   570  0196  0084               	movwf	4
   571  0197  303E               	movlw	low main@F1309
   572  0198  1283               	bcf	3,5	;RP0=0, select bank0
   573  0199  1303               	bcf	3,6	;RP1=0, select bank0
   574  019A  00A6               	movwf	??_main
   575  019B  0804               	movf	4,w
   576  019C  00A7               	movwf	??_main+1
   577  019D  3014               	movlw	20
   578  019E  00A8               	movwf	??_main+2
   579  019F                     u570:
   580  019F  0826               	movf	??_main,w
   581  01A0  0084               	movwf	4
   582  01A1  1383               	bcf	3,7	;select IRP bank0
   583  01A2  0800               	movf	0,w
   584  01A3  00A9               	movwf	??_main+3
   585  01A4  0AA6               	incf	??_main,f
   586  01A5  0827               	movf	??_main+1,w
   587  01A6  0084               	movwf	4
   588  01A7  0829               	movf	??_main+3,w
   589  01A8  0080               	movwf	0
   590  01A9  0AA7               	incf	??_main+1,f
   591  01AA  0BA8               	decfsz	??_main+2,f
   592  01AB  299F               	goto	u570
   593  01AC                     l1155:
   594                           
   595                           ;main.c: 112:         PORTCbits.RC7 = 1;
   596  01AC  1787               	bsf	7,7	;volatile
   597  01AD                     l1157:
   598                           
   599                           ;main.c: 113:         if(ADCON0bits.GO == 0){
   600  01AD  189F               	btfsc	31,1	;volatile
   601  01AE  29B0               	goto	u581
   602  01AF  29B1               	goto	u580
   603  01B0                     u581:
   604  01B0  29D4               	goto	l1171
   605  01B1                     u580:
   606  01B1                     l1159:
   607                           
   608                           ;main.c: 115:             if(ADCON0bits.CHS == 0b0000)
   609  01B1  0C1F               	rrf	31,w	;volatile
   610  01B2  00A6               	movwf	??_main
   611  01B3  0C26               	rrf	??_main,w
   612  01B4  390F               	andlw	15
   613  01B5  3A00               	xorlw	0
   614  01B6  1D03               	skipz
   615  01B7  29B9               	goto	u591
   616  01B8  29BA               	goto	u590
   617  01B9                     u591:
   618  01B9  29BF               	goto	l1163
   619  01BA                     u590:
   620  01BA                     l1161:
   621                           
   622                           ;main.c: 116:                 ADCON0bits.CHS = 0b0001;
   623  01BA  081F               	movf	31,w	;volatile
   624  01BB  39C3               	andlw	-61
   625  01BC  3804               	iorlw	4
   626  01BD  009F               	movwf	31	;volatile
   627  01BE  29CA               	goto	l1167
   628  01BF                     l1163:
   629  01BF  0C1F               	rrf	31,w	;volatile
   630  01C0  00A6               	movwf	??_main
   631  01C1  0C26               	rrf	??_main,w
   632  01C2  390F               	andlw	15
   633  01C3  3A01               	xorlw	1
   634  01C4  1D03               	skipz
   635  01C5  29C7               	goto	u601
   636  01C6  29C8               	goto	u600
   637  01C7                     u601:
   638  01C7  29CA               	goto	l1167
   639  01C8                     u600:
   640  01C8                     l1165:
   641                           
   642                           ;main.c: 118:                 ADCON0bits.CHS = 0b0000;
   643  01C8  30C3               	movlw	-61
   644  01C9  059F               	andwf	31,f	;volatile
   645  01CA                     l1167:
   646                           
   647                           ;main.c: 119:             _delay((unsigned long)((40)*(4000000/4000000.0)));
   648  01CA  300C               	movlw	12
   649  01CB  1283               	bcf	3,5	;RP0=0, select bank0
   650  01CC  1303               	bcf	3,6	;RP1=0, select bank0
   651  01CD  00A6               	movwf	??_main
   652  01CE                     u617:
   653  01CE  0BA6               	decfsz	??_main,f
   654  01CF  29CE               	goto	u617
   655  01D0  0000               	nop
   656  01D1                     l1169:
   657                           
   658                           ;main.c: 120:             ADCON0bits.GO = 1;
   659  01D1  1283               	bcf	3,5	;RP0=0, select bank0
   660  01D2  1303               	bcf	3,6	;RP1=0, select bank0
   661  01D3  149F               	bsf	31,1	;volatile
   662  01D4                     l1171:
   663                           
   664                           ;main.c: 123:         display_unidades = tabla[unidades];
   665  01D4  087D               	movf	_unidades,w
   666  01D5  00A6               	movwf	??_main
   667  01D6  0726               	addwf	??_main,w
   668  01D7  3E2A               	addlw	(low (main@tabla| 0))& (0+255)
   669  01D8  0084               	movwf	4
   670  01D9  1383               	bcf	3,7	;select IRP bank0
   671  01DA  0800               	movf	0,w
   672  01DB  00A7               	movwf	??_main+1
   673  01DC  0827               	movf	??_main+1,w
   674  01DD  00D5               	movwf	_display_unidades
   675  01DE                     l1173:
   676                           
   677                           ;main.c: 124:         display_decenas = tabla[decenas];
   678  01DE  087C               	movf	_decenas,w
   679  01DF  00A6               	movwf	??_main
   680  01E0  0726               	addwf	??_main,w
   681  01E1  3E2A               	addlw	(low (main@tabla| 0))& (0+255)
   682  01E2  0084               	movwf	4
   683  01E3  0800               	movf	0,w
   684  01E4  00A7               	movwf	??_main+1
   685  01E5  0827               	movf	??_main+1,w
   686  01E6  00D4               	movwf	_display_decenas
   687  01E7                     l1175:
   688                           
   689                           ;main.c: 125:         display_centenas = tabla[centenas];
   690  01E7  087B               	movf	_centenas,w
   691  01E8  00A6               	movwf	??_main
   692  01E9  0726               	addwf	??_main,w
   693  01EA  3E2A               	addlw	(low (main@tabla| 0))& (0+255)
   694  01EB  0084               	movwf	4
   695  01EC  0800               	movf	0,w
   696  01ED  00A7               	movwf	??_main+1
   697  01EE  0827               	movf	??_main+1,w
   698  01EF  00D3               	movwf	_display_centenas
   699  01F0  29AC               	goto	l1155
   700  01F1  120A  118A  2810   	ljmp	start
   701  01F4                     __end_of_main:
   702                           
   703                           	psect	text1
   704  024D                     __ptext1:	
   705 ;; *************** function _setup *****************
   706 ;; Defined at:
   707 ;;		line 4 in file "setup.c"
   708 ;; Parameters:    Size  Location     Type
   709 ;;		None
   710 ;; Auto vars:     Size  Location     Type
   711 ;;		None
   712 ;; Return value:  Size  Location     Type
   713 ;;                  1    wreg      void 
   714 ;; Registers used:
   715 ;;		wreg, status,2, status,0
   716 ;; Tracked objects:
   717 ;;		On entry : 0/0
   718 ;;		On exit  : 0/0
   719 ;;		Unchanged: 0/0
   720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   721 ;;      Params:         0       0       0       0       0
   722 ;;      Locals:         0       0       0       0       0
   723 ;;      Temps:          0       0       0       0       0
   724 ;;      Totals:         0       0       0       0       0
   725 ;;Total ram usage:        0 bytes
   726 ;; Hardware stack levels used: 1
   727 ;; Hardware stack levels required when called: 2
   728 ;; This function calls:
   729 ;;		Nothing
   730 ;; This function is called by:
   731 ;;		_main
   732 ;; This function uses a non-reentrant model
   733 ;;
   734                           
   735  024D                     _setup:	
   736                           ;psect for function _setup
   737                           
   738  024D                     l955:	
   739                           ;incstack = 0
   740                           ; Regs used in _setup: [wreg+status,2+status,0]
   741                           
   742                           
   743                           ;setup.c: 5:     ANSEL = 0b00000011;
   744  024D  3003               	movlw	3
   745  024E  1683               	bsf	3,5	;RP0=1, select bank3
   746  024F  1703               	bsf	3,6	;RP1=1, select bank3
   747  0250  0088               	movwf	8	;volatile
   748  0251                     l957:
   749                           
   750                           ;setup.c: 6:     ANSELH = 0;
   751  0251  0189               	clrf	9	;volatile
   752  0252                     l959:
   753                           
   754                           ;setup.c: 8:     TRISA = 0b00000011;
   755  0252  3003               	movlw	3
   756  0253  1683               	bsf	3,5	;RP0=1, select bank1
   757  0254  1303               	bcf	3,6	;RP1=0, select bank1
   758  0255  0085               	movwf	5	;volatile
   759                           
   760                           ;setup.c: 9:     PORTA = 0;
   761  0256  1283               	bcf	3,5	;RP0=0, select bank0
   762  0257  1303               	bcf	3,6	;RP1=0, select bank0
   763  0258  0185               	clrf	5	;volatile
   764                           
   765                           ;setup.c: 11:     TRISC = 0;
   766  0259  1683               	bsf	3,5	;RP0=1, select bank1
   767  025A  1303               	bcf	3,6	;RP1=0, select bank1
   768  025B  0187               	clrf	7	;volatile
   769                           
   770                           ;setup.c: 12:     PORTC = 0;
   771  025C  1283               	bcf	3,5	;RP0=0, select bank0
   772  025D  1303               	bcf	3,6	;RP1=0, select bank0
   773  025E  0187               	clrf	7	;volatile
   774                           
   775                           ;setup.c: 13:     TRISD = 0;
   776  025F  1683               	bsf	3,5	;RP0=1, select bank1
   777  0260  1303               	bcf	3,6	;RP1=0, select bank1
   778  0261  0188               	clrf	8	;volatile
   779                           
   780                           ;setup.c: 14:     PORTD = 0;
   781  0262  1283               	bcf	3,5	;RP0=0, select bank0
   782  0263  1303               	bcf	3,6	;RP1=0, select bank0
   783  0264  0188               	clrf	8	;volatile
   784                           
   785                           ;setup.c: 15:     TRISB = 0;
   786  0265  1683               	bsf	3,5	;RP0=1, select bank1
   787  0266  1303               	bcf	3,6	;RP1=0, select bank1
   788  0267  0186               	clrf	6	;volatile
   789                           
   790                           ;setup.c: 16:     PORTB = 0;
   791  0268  1283               	bcf	3,5	;RP0=0, select bank0
   792  0269  1303               	bcf	3,6	;RP1=0, select bank0
   793  026A  0186               	clrf	6	;volatile
   794  026B                     l961:
   795                           
   796                           ;setup.c: 19:     OSCCONbits.IRCF = 0b0110;
   797  026B  1683               	bsf	3,5	;RP0=1, select bank1
   798  026C  1303               	bcf	3,6	;RP1=0, select bank1
   799  026D  080F               	movf	15,w	;volatile
   800  026E  398F               	andlw	-113
   801  026F  3860               	iorlw	96
   802  0270  008F               	movwf	15	;volatile
   803  0271                     l963:
   804                           
   805                           ;setup.c: 20:     OSCCONbits.SCS = 1;
   806  0271  140F               	bsf	15,0	;volatile
   807  0272                     l965:
   808                           
   809                           ;setup.c: 23:     ADCON0bits.ADCS = 0b01;
   810  0272  1283               	bcf	3,5	;RP0=0, select bank0
   811  0273  1303               	bcf	3,6	;RP1=0, select bank0
   812  0274  081F               	movf	31,w	;volatile
   813  0275  393F               	andlw	-193
   814  0276  3840               	iorlw	64
   815  0277  009F               	movwf	31	;volatile
   816  0278                     l967:
   817                           
   818                           ;setup.c: 24:     ADCON1bits.VCFG0 = 0;
   819  0278  1683               	bsf	3,5	;RP0=1, select bank1
   820  0279  1303               	bcf	3,6	;RP1=0, select bank1
   821  027A  121F               	bcf	31,4	;volatile
   822  027B                     l969:
   823                           
   824                           ;setup.c: 25:     ADCON1bits.VCFG1 = 0;
   825  027B  129F               	bcf	31,5	;volatile
   826  027C                     l971:
   827                           
   828                           ;setup.c: 26:     ADCON0bits.CHS = 0b0000;
   829  027C  30C3               	movlw	-61
   830  027D  1283               	bcf	3,5	;RP0=0, select bank0
   831  027E  1303               	bcf	3,6	;RP1=0, select bank0
   832  027F  059F               	andwf	31,f	;volatile
   833  0280                     l973:
   834                           
   835                           ;setup.c: 27:     ADCON1bits.ADFM = 0;
   836  0280  1683               	bsf	3,5	;RP0=1, select bank1
   837  0281  1303               	bcf	3,6	;RP1=0, select bank1
   838  0282  139F               	bcf	31,7	;volatile
   839  0283                     l975:
   840                           
   841                           ;setup.c: 28:     ADCON0bits.ADON = 1;
   842  0283  1283               	bcf	3,5	;RP0=0, select bank0
   843  0284  1303               	bcf	3,6	;RP1=0, select bank0
   844  0285  141F               	bsf	31,0	;volatile
   845  0286                     l977:
   846                           
   847                           ;setup.c: 31:     PIR1bits.ADIF = 0;
   848  0286  130C               	bcf	12,6	;volatile
   849  0287                     l979:
   850                           
   851                           ;setup.c: 32:     PIE1bits.ADIE = 1;
   852  0287  1683               	bsf	3,5	;RP0=1, select bank1
   853  0288  1303               	bcf	3,6	;RP1=0, select bank1
   854  0289  170C               	bsf	12,6	;volatile
   855  028A                     l981:
   856                           
   857                           ;setup.c: 33:     INTCONbits.PEIE = 1;
   858  028A  170B               	bsf	11,6	;volatile
   859  028B                     l983:
   860                           
   861                           ;setup.c: 34:     INTCONbits.GIE = 1;
   862  028B  178B               	bsf	11,7	;volatile
   863  028C                     l985:
   864                           
   865                           ;setup.c: 36:     INTCONbits.T0IE = 1;
   866  028C  168B               	bsf	11,5	;volatile
   867  028D                     l987:
   868                           
   869                           ;setup.c: 37:     OPTION_REGbits.T0CS = 0;
   870  028D  1281               	bcf	1,5	;volatile
   871  028E                     l989:
   872                           
   873                           ;setup.c: 38:     OPTION_REGbits.PSA = 0;
   874  028E  1181               	bcf	1,3	;volatile
   875  028F                     l991:
   876                           
   877                           ;setup.c: 39:     OPTION_REGbits.PS0 = 1;
   878  028F  1401               	bsf	1,0	;volatile
   879  0290                     l993:
   880                           
   881                           ;setup.c: 40:     OPTION_REGbits.PS1 = 1;
   882  0290  1481               	bsf	1,1	;volatile
   883  0291                     l995:
   884                           
   885                           ;setup.c: 41:     OPTION_REGbits.PS2 = 1;
   886  0291  1501               	bsf	1,2	;volatile
   887  0292                     l997:
   888                           
   889                           ;setup.c: 42:     TMR0 = 248;
   890  0292  30F8               	movlw	248
   891  0293  1283               	bcf	3,5	;RP0=0, select bank0
   892  0294  1303               	bcf	3,6	;RP1=0, select bank0
   893  0295  0081               	movwf	1	;volatile
   894  0296                     l999:
   895                           
   896                           ;setup.c: 43:     INTCONbits.T0IF = 0;
   897  0296  110B               	bcf	11,2	;volatile
   898  0297                     l121:
   899  0297  0008               	return
   900  0298                     __end_of_setup:
   901                           
   902                           	psect	text2
   903  0032                     __ptext2:	
   904 ;; *************** function _isr *****************
   905 ;; Defined at:
   906 ;;		line 49 in file "main.c"
   907 ;; Parameters:    Size  Location     Type
   908 ;;		None
   909 ;; Auto vars:     Size  Location     Type
   910 ;;		None
   911 ;; Return value:  Size  Location     Type
   912 ;;                  1    wreg      void 
   913 ;; Registers used:
   914 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   915 ;; Tracked objects:
   916 ;;		On entry : 0/0
   917 ;;		On exit  : 0/0
   918 ;;		Unchanged: 0/0
   919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   920 ;;      Params:         0       0       0       0       0
   921 ;;      Locals:         0       0       0       0       0
   922 ;;      Temps:          0       6       0       0       0
   923 ;;      Totals:         0       6       0       0       0
   924 ;;Total ram usage:        6 bytes
   925 ;; Hardware stack levels used: 1
   926 ;; Hardware stack levels required when called: 1
   927 ;; This function calls:
   928 ;;		___awdiv
   929 ;;		___awmod
   930 ;; This function is called by:
   931 ;;		Interrupt level 1
   932 ;; This function uses a non-reentrant model
   933 ;;
   934                           
   935  0032                     _isr:	
   936                           ;psect for function _isr
   937                           
   938  0032                     i1l1083:
   939                           
   940                           ;main.c: 50:     if(PIR1bits.ADIF){
   941  0032  1F0C               	btfss	12,6	;volatile
   942  0033  2835               	goto	u50_21
   943  0034  2836               	goto	u50_20
   944  0035                     u50_21:
   945  0035  28EA               	goto	i1l1127
   946  0036                     u50_20:
   947  0036                     i1l1085:
   948                           
   949                           ;main.c: 51:         if(ADCON0bits.CHS == 0){
   950  0036  0C1F               	rrf	31,w	;volatile
   951  0037  00A0               	movwf	??_isr
   952  0038  0C20               	rrf	??_isr,w
   953  0039  390F               	andlw	15
   954  003A  3A00               	xorlw	0
   955  003B  1D03               	skipz
   956  003C  283E               	goto	u51_21
   957  003D  283F               	goto	u51_20
   958  003E                     u51_21:
   959  003E  2842               	goto	i1l1089
   960  003F                     u51_20:
   961  003F                     i1l1087:
   962                           
   963                           ;main.c: 52:             PORTB = ADRESH;
   964  003F  081E               	movf	30,w	;volatile
   965  0040  0086               	movwf	6	;volatile
   966                           
   967                           ;main.c: 53:         }
   968  0041  28E9               	goto	i1l1125
   969  0042                     i1l1089:
   970  0042  0C1F               	rrf	31,w	;volatile
   971  0043  00A0               	movwf	??_isr
   972  0044  0C20               	rrf	??_isr,w
   973  0045  390F               	andlw	15
   974  0046  3A01               	xorlw	1
   975  0047  1D03               	skipz
   976  0048  284A               	goto	u52_21
   977  0049  284B               	goto	u52_20
   978  004A                     u52_21:
   979  004A  28E9               	goto	i1l1125
   980  004B                     u52_20:
   981  004B                     i1l1091:
   982                           
   983                           ;main.c: 55:             valor = ADRESH;
   984  004B  081E               	movf	30,w	;volatile
   985  004C  00A0               	movwf	??_isr
   986  004D  0820               	movf	??_isr,w
   987  004E  00FA               	movwf	_valor
   988  004F                     i1l1093:
   989                           
   990                           ;main.c: 56:             centenas2 = valor/100;
   991  004F  3064               	movlw	100
   992  0050  00F0               	movwf	___awdiv@divisor
   993  0051  3000               	movlw	0
   994  0052  00F1               	movwf	___awdiv@divisor+1
   995  0053  087A               	movf	_valor,w
   996  0054  00A0               	movwf	??_isr
   997  0055  01A1               	clrf	??_isr+1
   998  0056  0820               	movf	??_isr,w
   999  0057  00F2               	movwf	___awdiv@dividend
  1000  0058  0821               	movf	??_isr+1,w
  1001  0059  00F3               	movwf	___awdiv@dividend+1
  1002  005A  120A  118A  2129  120A  118A  	fcall	___awdiv
  1003  005F  0870               	movf	?___awdiv,w
  1004  0060  1283               	bcf	3,5	;RP0=0, select bank0
  1005  0061  1303               	bcf	3,6	;RP1=0, select bank0
  1006  0062  00A2               	movwf	??_isr+2
  1007  0063  0822               	movf	??_isr+2,w
  1008  0064  00D8               	movwf	_centenas2
  1009  0065                     i1l1095:
  1010                           
  1011                           ;main.c: 57:             remainder = valor%100;
  1012  0065  3064               	movlw	100
  1013  0066  00F0               	movwf	___awmod@divisor
  1014  0067  3000               	movlw	0
  1015  0068  00F1               	movwf	___awmod@divisor+1
  1016  0069  087A               	movf	_valor,w
  1017  006A  00A0               	movwf	??_isr
  1018  006B  01A1               	clrf	??_isr+1
  1019  006C  0820               	movf	??_isr,w
  1020  006D  00F2               	movwf	___awmod@dividend
  1021  006E  0821               	movf	??_isr+1,w
  1022  006F  00F3               	movwf	___awmod@dividend+1
  1023  0070  120A  118A  21F4  120A  118A  	fcall	___awmod
  1024  0075  0870               	movf	?___awmod,w
  1025  0076  1283               	bcf	3,5	;RP0=0, select bank0
  1026  0077  1303               	bcf	3,6	;RP1=0, select bank0
  1027  0078  00A2               	movwf	??_isr+2
  1028  0079  0822               	movf	??_isr+2,w
  1029  007A  00F9               	movwf	_remainder
  1030  007B                     i1l1097:
  1031                           
  1032                           ;main.c: 58:             decenas2 = remainder/10;
  1033  007B  300A               	movlw	10
  1034  007C  00F0               	movwf	___awdiv@divisor
  1035  007D  3000               	movlw	0
  1036  007E  00F1               	movwf	___awdiv@divisor+1
  1037  007F  0879               	movf	_remainder,w
  1038  0080  00F2               	movwf	___awdiv@dividend
  1039  0081  01F3               	clrf	___awdiv@dividend+1
  1040  0082  1BF2               	btfsc	___awdiv@dividend,7
  1041  0083  03F3               	decf	___awdiv@dividend+1,f
  1042  0084  120A  118A  2129  120A  118A  	fcall	___awdiv
  1043  0089  0870               	movf	?___awdiv,w
  1044  008A  1283               	bcf	3,5	;RP0=0, select bank0
  1045  008B  1303               	bcf	3,6	;RP1=0, select bank0
  1046  008C  00A0               	movwf	??_isr
  1047  008D  0820               	movf	??_isr,w
  1048  008E  00D9               	movwf	_decenas2
  1049  008F                     i1l1099:
  1050                           
  1051                           ;main.c: 59:             unidades2 = remainder%10;
  1052  008F  300A               	movlw	10
  1053  0090  00F0               	movwf	___awmod@divisor
  1054  0091  3000               	movlw	0
  1055  0092  00F1               	movwf	___awmod@divisor+1
  1056  0093  0879               	movf	_remainder,w
  1057  0094  00F2               	movwf	___awmod@dividend
  1058  0095  01F3               	clrf	___awmod@dividend+1
  1059  0096  1BF2               	btfsc	___awmod@dividend,7
  1060  0097  03F3               	decf	___awmod@dividend+1,f
  1061  0098  120A  118A  21F4  120A  118A  	fcall	___awmod
  1062  009D  0870               	movf	?___awmod,w
  1063  009E  1283               	bcf	3,5	;RP0=0, select bank0
  1064  009F  1303               	bcf	3,6	;RP1=0, select bank0
  1065  00A0  00A0               	movwf	??_isr
  1066  00A1  0820               	movf	??_isr,w
  1067  00A2  00DA               	movwf	_unidades2
  1068  00A3                     i1l1101:
  1069                           
  1070                           ;main.c: 60:             centenas3 = 0;
  1071  00A3  01D6               	clrf	_centenas3
  1072  00A4                     i1l1103:
  1073                           
  1074                           ;main.c: 61:             decenas3 = 0;
  1075  00A4  01D7               	clrf	_decenas3
  1076  00A5                     i1l1105:
  1077                           
  1078                           ;main.c: 62:             unidades = unidades2*2;
  1079  00A5  085A               	movf	_unidades2,w
  1080  00A6  00A0               	movwf	??_isr
  1081  00A7  0720               	addwf	??_isr,w
  1082  00A8  00A1               	movwf	??_isr+1
  1083  00A9  0821               	movf	??_isr+1,w
  1084  00AA  00FD               	movwf	_unidades
  1085  00AB                     i1l1107:
  1086                           
  1087                           ;main.c: 63:             if (unidades > 9){
  1088  00AB  087D               	movf	_unidades,w
  1089  00AC  3A80               	xorlw	128
  1090  00AD  3E76               	addlw	-138
  1091  00AE  1C03               	skipc
  1092  00AF  28B1               	goto	u53_21
  1093  00B0  28B2               	goto	u53_20
  1094  00B1                     u53_21:
  1095  00B1  28B9               	goto	i1l59
  1096  00B2                     u53_20:
  1097  00B2                     i1l1109:
  1098                           
  1099                           ;main.c: 64:                 unidades = unidades - 10;
  1100  00B2  087D               	movf	_unidades,w
  1101  00B3  3EF6               	addlw	-10
  1102  00B4  00A0               	movwf	??_isr
  1103  00B5  0820               	movf	??_isr,w
  1104  00B6  00FD               	movwf	_unidades
  1105  00B7                     i1l1111:
  1106                           
  1107                           ;main.c: 65:                 decenas3 = 1;
  1108  00B7  01D7               	clrf	_decenas3
  1109  00B8  0AD7               	incf	_decenas3,f
  1110  00B9                     i1l59:	
  1111                           ;main.c: 66:             }
  1112                           
  1113                           
  1114                           ;main.c: 67:             decenas = decenas2*2;
  1115  00B9  0859               	movf	_decenas2,w
  1116  00BA  00A0               	movwf	??_isr
  1117  00BB  0720               	addwf	??_isr,w
  1118  00BC  00A1               	movwf	??_isr+1
  1119  00BD  0821               	movf	??_isr+1,w
  1120  00BE  00FC               	movwf	_decenas
  1121                           
  1122                           ;main.c: 68:             decenas = decenas + decenas3;
  1123  00BF  0857               	movf	_decenas3,w
  1124  00C0  077C               	addwf	_decenas,w
  1125  00C1  00A0               	movwf	??_isr
  1126  00C2  0820               	movf	??_isr,w
  1127  00C3  00FC               	movwf	_decenas
  1128  00C4                     i1l1113:
  1129                           
  1130                           ;main.c: 69:             if (decenas > 9){
  1131  00C4  087C               	movf	_decenas,w
  1132  00C5  3A80               	xorlw	128
  1133  00C6  3E76               	addlw	-138
  1134  00C7  1C03               	skipc
  1135  00C8  28CA               	goto	u54_21
  1136  00C9  28CB               	goto	u54_20
  1137  00CA                     u54_21:
  1138  00CA  28D2               	goto	i1l60
  1139  00CB                     u54_20:
  1140  00CB                     i1l1115:
  1141                           
  1142                           ;main.c: 70:                 decenas = decenas - 10;
  1143  00CB  087C               	movf	_decenas,w
  1144  00CC  3EF6               	addlw	-10
  1145  00CD  00A0               	movwf	??_isr
  1146  00CE  0820               	movf	??_isr,w
  1147  00CF  00FC               	movwf	_decenas
  1148  00D0                     i1l1117:
  1149                           
  1150                           ;main.c: 71:                 centenas3 = 1;
  1151  00D0  01D6               	clrf	_centenas3
  1152  00D1  0AD6               	incf	_centenas3,f
  1153  00D2                     i1l60:	
  1154                           ;main.c: 72:             }
  1155                           
  1156                           
  1157                           ;main.c: 73:             centenas = centenas2*2;
  1158  00D2  0858               	movf	_centenas2,w
  1159  00D3  00A0               	movwf	??_isr
  1160  00D4  0720               	addwf	??_isr,w
  1161  00D5  00A1               	movwf	??_isr+1
  1162  00D6  0821               	movf	??_isr+1,w
  1163  00D7  00FB               	movwf	_centenas
  1164                           
  1165                           ;main.c: 74:             centenas = centenas + centenas3;
  1166  00D8  0856               	movf	_centenas3,w
  1167  00D9  077B               	addwf	_centenas,w
  1168  00DA  00A0               	movwf	??_isr
  1169  00DB  0820               	movf	??_isr,w
  1170  00DC  00FB               	movwf	_centenas
  1171  00DD                     i1l1119:
  1172                           
  1173                           ;main.c: 75:             if (valor > 250){
  1174  00DD  30FB               	movlw	251
  1175  00DE  027A               	subwf	_valor,w
  1176  00DF  1C03               	skipc
  1177  00E0  28E2               	goto	u55_21
  1178  00E1  28E3               	goto	u55_20
  1179  00E2                     u55_21:
  1180  00E2  28E9               	goto	i1l1125
  1181  00E3                     u55_20:
  1182  00E3                     i1l1121:
  1183                           
  1184                           ;main.c: 76:                 unidades = 0;
  1185  00E3  01FD               	clrf	_unidades
  1186                           
  1187                           ;main.c: 77:                 decenas = 0;
  1188  00E4  01FC               	clrf	_decenas
  1189  00E5                     i1l1123:
  1190                           
  1191                           ;main.c: 78:                 centenas = 5;
  1192  00E5  3005               	movlw	5
  1193  00E6  00A0               	movwf	??_isr
  1194  00E7  0820               	movf	??_isr,w
  1195  00E8  00FB               	movwf	_centenas
  1196  00E9                     i1l1125:
  1197                           
  1198                           ;main.c: 81:         PIR1bits.ADIF = 0;
  1199  00E9  130C               	bcf	12,6	;volatile
  1200  00EA                     i1l1127:
  1201                           
  1202                           ;main.c: 83:     if(INTCONbits.T0IF){
  1203  00EA  1D0B               	btfss	11,2	;volatile
  1204  00EB  28ED               	goto	u56_21
  1205  00EC  28EE               	goto	u56_20
  1206  00ED                     u56_21:
  1207  00ED  2920               	goto	i1l68
  1208  00EE                     u56_20:
  1209  00EE  2908               	goto	i1l1141
  1210  00EF                     i1l1131:
  1211                           
  1212                           ;main.c: 87:                 PORTD = 0b00000001;
  1213  00EF  3001               	movlw	1
  1214  00F0  0088               	movwf	8	;volatile
  1215                           
  1216                           ;main.c: 88:                 PORTC = display_centenas;
  1217  00F1  0853               	movf	_display_centenas,w
  1218  00F2  0087               	movwf	7	;volatile
  1219                           
  1220                           ;main.c: 89:                 i = 2;
  1221  00F3  3002               	movlw	2
  1222  00F4  00A0               	movwf	??_isr
  1223  00F5  0820               	movf	??_isr,w
  1224  00F6  00D2               	movwf	_i
  1225                           
  1226                           ;main.c: 90:                 break;
  1227  00F7  291D               	goto	i1l65
  1228  00F8                     i1l1133:
  1229                           
  1230                           ;main.c: 92:                 PORTD = 0b00000010;
  1231  00F8  3002               	movlw	2
  1232  00F9  0088               	movwf	8	;volatile
  1233                           
  1234                           ;main.c: 93:                 PORTC = display_decenas;
  1235  00FA  0854               	movf	_display_decenas,w
  1236  00FB  0087               	movwf	7	;volatile
  1237                           
  1238                           ;main.c: 94:                 i = 3;
  1239  00FC  3003               	movlw	3
  1240  00FD  00A0               	movwf	??_isr
  1241  00FE  0820               	movf	??_isr,w
  1242  00FF  00D2               	movwf	_i
  1243                           
  1244                           ;main.c: 95:                 break;
  1245  0100  291D               	goto	i1l65
  1246  0101                     i1l1135:
  1247                           
  1248                           ;main.c: 97:                 PORTD = 0b00000100;
  1249  0101  3004               	movlw	4
  1250  0102  0088               	movwf	8	;volatile
  1251                           
  1252                           ;main.c: 98:                 PORTC = display_unidades;
  1253  0103  0855               	movf	_display_unidades,w
  1254  0104  0087               	movwf	7	;volatile
  1255  0105                     i1l1137:
  1256                           
  1257                           ;main.c: 99:                 i = 1;
  1258  0105  01D2               	clrf	_i
  1259  0106  0AD2               	incf	_i,f
  1260                           
  1261                           ;main.c: 100:                 break;
  1262  0107  291D               	goto	i1l65
  1263  0108                     i1l1141:
  1264  0108  0852               	movf	_i,w
  1265  0109  00A0               	movwf	??_isr
  1266  010A  01A1               	clrf	??_isr+1
  1267  010B  1BA0               	btfsc	??_isr,7
  1268  010C  03A1               	decf	??_isr+1,f
  1269                           
  1270                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1271                           ; Switch size 1, requested type "simple"
  1272                           ; Number of cases is 1, Range of values is 0 to 0
  1273                           ; switch strategies available:
  1274                           ; Name         Instructions Cycles
  1275                           ; simple_byte            4     3 (average)
  1276                           ; direct_byte           11     8 (fixed)
  1277                           ; jumptable            260     6 (fixed)
  1278                           ;	Chosen strategy is simple_byte
  1279  010D  0821               	movf	??_isr+1,w
  1280  010E  3A00               	xorlw	0	; case 0
  1281  010F  1903               	skipnz
  1282  0110  2912               	goto	i1l1197
  1283  0111  291D               	goto	i1l65
  1284  0112                     i1l1197:
  1285                           
  1286                           ; Switch size 1, requested type "simple"
  1287                           ; Number of cases is 3, Range of values is 1 to 3
  1288                           ; switch strategies available:
  1289                           ; Name         Instructions Cycles
  1290                           ; simple_byte           10     6 (average)
  1291                           ; direct_byte           20    11 (fixed)
  1292                           ; jumptable            263     9 (fixed)
  1293                           ;	Chosen strategy is simple_byte
  1294  0112  0820               	movf	??_isr,w
  1295  0113  3A01               	xorlw	1	; case 1
  1296  0114  1903               	skipnz
  1297  0115  28EF               	goto	i1l1131
  1298  0116  3A03               	xorlw	3	; case 2
  1299  0117  1903               	skipnz
  1300  0118  28F8               	goto	i1l1133
  1301  0119  3A01               	xorlw	1	; case 3
  1302  011A  1903               	skipnz
  1303  011B  2901               	goto	i1l1135
  1304  011C  291D               	goto	i1l65
  1305  011D                     i1l65:
  1306                           
  1307                           ;main.c: 102:         INTCONbits.T0IF = 0;
  1308  011D  110B               	bcf	11,2	;volatile
  1309  011E                     i1l1143:
  1310                           
  1311                           ;main.c: 103:         TMR0 = 248;
  1312  011E  30F8               	movlw	248
  1313  011F  0081               	movwf	1	;volatile
  1314  0120                     i1l68:
  1315  0120  0825               	movf	??_isr+5,w
  1316  0121  008A               	movwf	10
  1317  0122  0824               	movf	??_isr+4,w
  1318  0123  0084               	movwf	4
  1319  0124  0E23               	swapf	??_isr+3,w
  1320  0125  0083               	movwf	3
  1321  0126  0EFE               	swapf	btemp,f
  1322  0127  0E7E               	swapf	btemp,w
  1323  0128  0009               	retfie
  1324  0129                     __end_of_isr:
  1325                           
  1326                           	psect	intentry
  1327  0004                     __pintentry:	
  1328                           ;incstack = 0
  1329                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1330                           
  1331  0004                     interrupt_function:
  1332  007E                     saved_w	set	btemp
  1333  0004  00FE               	movwf	btemp
  1334  0005  0E03               	swapf	3,w
  1335  0006  1283               	bcf	3,5	;RP0=0, select bank0
  1336  0007  1303               	bcf	3,6	;RP1=0, select bank0
  1337  0008  00A3               	movwf	??_isr+3
  1338  0009  0804               	movf	4,w
  1339  000A  00A4               	movwf	??_isr+4
  1340  000B  080A               	movf	10,w
  1341  000C  00A5               	movwf	??_isr+5
  1342  000D  120A  118A  2832   	ljmp	_isr
  1343                           
  1344                           	psect	text3
  1345  01F4                     __ptext3:	
  1346 ;; *************** function ___awmod *****************
  1347 ;; Defined at:
  1348 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\awmod.c"
  1349 ;; Parameters:    Size  Location     Type
  1350 ;;  divisor         2    0[COMMON] int 
  1351 ;;  dividend        2    2[COMMON] int 
  1352 ;; Auto vars:     Size  Location     Type
  1353 ;;  sign            1    6[COMMON] unsigned char 
  1354 ;;  counter         1    5[COMMON] unsigned char 
  1355 ;; Return value:  Size  Location     Type
  1356 ;;                  2    0[COMMON] int 
  1357 ;; Registers used:
  1358 ;;		wreg, status,2, status,0
  1359 ;; Tracked objects:
  1360 ;;		On entry : 0/0
  1361 ;;		On exit  : 0/0
  1362 ;;		Unchanged: 0/0
  1363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1364 ;;      Params:         4       0       0       0       0
  1365 ;;      Locals:         2       0       0       0       0
  1366 ;;      Temps:          1       0       0       0       0
  1367 ;;      Totals:         7       0       0       0       0
  1368 ;;Total ram usage:        7 bytes
  1369 ;; Hardware stack levels used: 1
  1370 ;; This function calls:
  1371 ;;		Nothing
  1372 ;; This function is called by:
  1373 ;;		_isr
  1374 ;; This function uses a non-reentrant model
  1375 ;;
  1376                           
  1377  01F4                     ___awmod:	
  1378                           ;psect for function ___awmod
  1379                           
  1380  01F4                     i1l1045:	
  1381                           ;incstack = 0
  1382                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1383                           
  1384  01F4  01F6               	clrf	___awmod@sign
  1385  01F5                     i1l1047:
  1386  01F5  1FF3               	btfss	___awmod@dividend+1,7
  1387  01F6  29F8               	goto	u41_21
  1388  01F7  29F9               	goto	u41_20
  1389  01F8                     u41_21:
  1390  01F8  2A00               	goto	i1l1053
  1391  01F9                     u41_20:
  1392  01F9                     i1l1049:
  1393  01F9  09F2               	comf	___awmod@dividend,f
  1394  01FA  09F3               	comf	___awmod@dividend+1,f
  1395  01FB  0AF2               	incf	___awmod@dividend,f
  1396  01FC  1903               	skipnz
  1397  01FD  0AF3               	incf	___awmod@dividend+1,f
  1398  01FE                     i1l1051:
  1399  01FE  01F6               	clrf	___awmod@sign
  1400  01FF  0AF6               	incf	___awmod@sign,f
  1401  0200                     i1l1053:
  1402  0200  1FF1               	btfss	___awmod@divisor+1,7
  1403  0201  2A03               	goto	u42_21
  1404  0202  2A04               	goto	u42_20
  1405  0203                     u42_21:
  1406  0203  2A09               	goto	i1l1057
  1407  0204                     u42_20:
  1408  0204                     i1l1055:
  1409  0204  09F0               	comf	___awmod@divisor,f
  1410  0205  09F1               	comf	___awmod@divisor+1,f
  1411  0206  0AF0               	incf	___awmod@divisor,f
  1412  0207  1903               	skipnz
  1413  0208  0AF1               	incf	___awmod@divisor+1,f
  1414  0209                     i1l1057:
  1415  0209  0870               	movf	___awmod@divisor,w
  1416  020A  0471               	iorwf	___awmod@divisor+1,w
  1417  020B  1903               	btfsc	3,2
  1418  020C  2A0E               	goto	u43_21
  1419  020D  2A0F               	goto	u43_20
  1420  020E                     u43_21:
  1421  020E  2A3E               	goto	i1l1075
  1422  020F                     u43_20:
  1423  020F                     i1l1059:
  1424  020F  01F5               	clrf	___awmod@counter
  1425  0210  0AF5               	incf	___awmod@counter,f
  1426  0211  2A1D               	goto	i1l1065
  1427  0212                     i1l1061:
  1428  0212  3001               	movlw	1
  1429  0213                     u44_25:
  1430  0213  1003               	clrc
  1431  0214  0DF0               	rlf	___awmod@divisor,f
  1432  0215  0DF1               	rlf	___awmod@divisor+1,f
  1433  0216  3EFF               	addlw	-1
  1434  0217  1D03               	skipz
  1435  0218  2A13               	goto	u44_25
  1436  0219                     i1l1063:
  1437  0219  3001               	movlw	1
  1438  021A  00F4               	movwf	??___awmod
  1439  021B  0874               	movf	??___awmod,w
  1440  021C  07F5               	addwf	___awmod@counter,f
  1441  021D                     i1l1065:
  1442  021D  1FF1               	btfss	___awmod@divisor+1,7
  1443  021E  2A20               	goto	u45_21
  1444  021F  2A21               	goto	u45_20
  1445  0220                     u45_21:
  1446  0220  2A12               	goto	i1l1061
  1447  0221                     u45_20:
  1448  0221                     i1l1067:
  1449  0221  0871               	movf	___awmod@divisor+1,w
  1450  0222  0273               	subwf	___awmod@dividend+1,w
  1451  0223  1D03               	skipz
  1452  0224  2A27               	goto	u46_25
  1453  0225  0870               	movf	___awmod@divisor,w
  1454  0226  0272               	subwf	___awmod@dividend,w
  1455  0227                     u46_25:
  1456  0227  1C03               	skipc
  1457  0228  2A2A               	goto	u46_21
  1458  0229  2A2B               	goto	u46_20
  1459  022A                     u46_21:
  1460  022A  2A31               	goto	i1l1071
  1461  022B                     u46_20:
  1462  022B                     i1l1069:
  1463  022B  0870               	movf	___awmod@divisor,w
  1464  022C  02F2               	subwf	___awmod@dividend,f
  1465  022D  0871               	movf	___awmod@divisor+1,w
  1466  022E  1C03               	skipc
  1467  022F  03F3               	decf	___awmod@dividend+1,f
  1468  0230  02F3               	subwf	___awmod@dividend+1,f
  1469  0231                     i1l1071:
  1470  0231  3001               	movlw	1
  1471  0232                     u47_25:
  1472  0232  1003               	clrc
  1473  0233  0CF1               	rrf	___awmod@divisor+1,f
  1474  0234  0CF0               	rrf	___awmod@divisor,f
  1475  0235  3EFF               	addlw	-1
  1476  0236  1D03               	skipz
  1477  0237  2A32               	goto	u47_25
  1478  0238                     i1l1073:
  1479  0238  3001               	movlw	1
  1480  0239  02F5               	subwf	___awmod@counter,f
  1481  023A  1D03               	btfss	3,2
  1482  023B  2A3D               	goto	u48_21
  1483  023C  2A3E               	goto	u48_20
  1484  023D                     u48_21:
  1485  023D  2A21               	goto	i1l1067
  1486  023E                     u48_20:
  1487  023E                     i1l1075:
  1488  023E  0876               	movf	___awmod@sign,w
  1489  023F  1903               	btfsc	3,2
  1490  0240  2A42               	goto	u49_21
  1491  0241  2A43               	goto	u49_20
  1492  0242                     u49_21:
  1493  0242  2A48               	goto	i1l1079
  1494  0243                     u49_20:
  1495  0243                     i1l1077:
  1496  0243  09F2               	comf	___awmod@dividend,f
  1497  0244  09F3               	comf	___awmod@dividend+1,f
  1498  0245  0AF2               	incf	___awmod@dividend,f
  1499  0246  1903               	skipnz
  1500  0247  0AF3               	incf	___awmod@dividend+1,f
  1501  0248                     i1l1079:
  1502  0248  0873               	movf	___awmod@dividend+1,w
  1503  0249  00F1               	movwf	?___awmod+1
  1504  024A  0872               	movf	___awmod@dividend,w
  1505  024B  00F0               	movwf	?___awmod
  1506  024C                     i1l373:
  1507  024C  0008               	return
  1508  024D                     __end_of___awmod:
  1509                           
  1510                           	psect	text4
  1511  0129                     __ptext4:	
  1512 ;; *************** function ___awdiv *****************
  1513 ;; Defined at:
  1514 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\awdiv.c"
  1515 ;; Parameters:    Size  Location     Type
  1516 ;;  divisor         2    0[COMMON] int 
  1517 ;;  dividend        2    2[COMMON] int 
  1518 ;; Auto vars:     Size  Location     Type
  1519 ;;  quotient        2    7[COMMON] int 
  1520 ;;  sign            1    6[COMMON] unsigned char 
  1521 ;;  counter         1    5[COMMON] unsigned char 
  1522 ;; Return value:  Size  Location     Type
  1523 ;;                  2    0[COMMON] int 
  1524 ;; Registers used:
  1525 ;;		wreg, status,2, status,0
  1526 ;; Tracked objects:
  1527 ;;		On entry : 0/0
  1528 ;;		On exit  : 0/0
  1529 ;;		Unchanged: 0/0
  1530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1531 ;;      Params:         4       0       0       0       0
  1532 ;;      Locals:         4       0       0       0       0
  1533 ;;      Temps:          1       0       0       0       0
  1534 ;;      Totals:         9       0       0       0       0
  1535 ;;Total ram usage:        9 bytes
  1536 ;; Hardware stack levels used: 1
  1537 ;; This function calls:
  1538 ;;		Nothing
  1539 ;; This function is called by:
  1540 ;;		_isr
  1541 ;; This function uses a non-reentrant model
  1542 ;;
  1543                           
  1544  0129                     ___awdiv:	
  1545                           ;psect for function ___awdiv
  1546                           
  1547  0129                     i1l1001:	
  1548                           ;incstack = 0
  1549                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1550                           
  1551  0129  01F6               	clrf	___awdiv@sign
  1552  012A                     i1l1003:
  1553  012A  1FF1               	btfss	___awdiv@divisor+1,7
  1554  012B  292D               	goto	u31_21
  1555  012C  292E               	goto	u31_20
  1556  012D                     u31_21:
  1557  012D  2935               	goto	i1l1009
  1558  012E                     u31_20:
  1559  012E                     i1l1005:
  1560  012E  09F0               	comf	___awdiv@divisor,f
  1561  012F  09F1               	comf	___awdiv@divisor+1,f
  1562  0130  0AF0               	incf	___awdiv@divisor,f
  1563  0131  1903               	skipnz
  1564  0132  0AF1               	incf	___awdiv@divisor+1,f
  1565  0133                     i1l1007:
  1566  0133  01F6               	clrf	___awdiv@sign
  1567  0134  0AF6               	incf	___awdiv@sign,f
  1568  0135                     i1l1009:
  1569  0135  1FF3               	btfss	___awdiv@dividend+1,7
  1570  0136  2938               	goto	u32_21
  1571  0137  2939               	goto	u32_20
  1572  0138                     u32_21:
  1573  0138  2942               	goto	i1l1015
  1574  0139                     u32_20:
  1575  0139                     i1l1011:
  1576  0139  09F2               	comf	___awdiv@dividend,f
  1577  013A  09F3               	comf	___awdiv@dividend+1,f
  1578  013B  0AF2               	incf	___awdiv@dividend,f
  1579  013C  1903               	skipnz
  1580  013D  0AF3               	incf	___awdiv@dividend+1,f
  1581  013E                     i1l1013:
  1582  013E  3001               	movlw	1
  1583  013F  00F4               	movwf	??___awdiv
  1584  0140  0874               	movf	??___awdiv,w
  1585  0141  06F6               	xorwf	___awdiv@sign,f
  1586  0142                     i1l1015:
  1587  0142  01F7               	clrf	___awdiv@quotient
  1588  0143  01F8               	clrf	___awdiv@quotient+1
  1589  0144                     i1l1017:
  1590  0144  0870               	movf	___awdiv@divisor,w
  1591  0145  0471               	iorwf	___awdiv@divisor+1,w
  1592  0146  1903               	btfsc	3,2
  1593  0147  2949               	goto	u33_21
  1594  0148  294A               	goto	u33_20
  1595  0149                     u33_21:
  1596  0149  2981               	goto	i1l1037
  1597  014A                     u33_20:
  1598  014A                     i1l1019:
  1599  014A  01F5               	clrf	___awdiv@counter
  1600  014B  0AF5               	incf	___awdiv@counter,f
  1601  014C  2958               	goto	i1l1025
  1602  014D                     i1l1021:
  1603  014D  3001               	movlw	1
  1604  014E                     u34_25:
  1605  014E  1003               	clrc
  1606  014F  0DF0               	rlf	___awdiv@divisor,f
  1607  0150  0DF1               	rlf	___awdiv@divisor+1,f
  1608  0151  3EFF               	addlw	-1
  1609  0152  1D03               	skipz
  1610  0153  294E               	goto	u34_25
  1611  0154                     i1l1023:
  1612  0154  3001               	movlw	1
  1613  0155  00F4               	movwf	??___awdiv
  1614  0156  0874               	movf	??___awdiv,w
  1615  0157  07F5               	addwf	___awdiv@counter,f
  1616  0158                     i1l1025:
  1617  0158  1FF1               	btfss	___awdiv@divisor+1,7
  1618  0159  295B               	goto	u35_21
  1619  015A  295C               	goto	u35_20
  1620  015B                     u35_21:
  1621  015B  294D               	goto	i1l1021
  1622  015C                     u35_20:
  1623  015C                     i1l1027:
  1624  015C  3001               	movlw	1
  1625  015D                     u36_25:
  1626  015D  1003               	clrc
  1627  015E  0DF7               	rlf	___awdiv@quotient,f
  1628  015F  0DF8               	rlf	___awdiv@quotient+1,f
  1629  0160  3EFF               	addlw	-1
  1630  0161  1D03               	skipz
  1631  0162  295D               	goto	u36_25
  1632  0163  0871               	movf	___awdiv@divisor+1,w
  1633  0164  0273               	subwf	___awdiv@dividend+1,w
  1634  0165  1D03               	skipz
  1635  0166  2969               	goto	u37_25
  1636  0167  0870               	movf	___awdiv@divisor,w
  1637  0168  0272               	subwf	___awdiv@dividend,w
  1638  0169                     u37_25:
  1639  0169  1C03               	skipc
  1640  016A  296C               	goto	u37_21
  1641  016B  296D               	goto	u37_20
  1642  016C                     u37_21:
  1643  016C  2974               	goto	i1l1033
  1644  016D                     u37_20:
  1645  016D                     i1l1029:
  1646  016D  0870               	movf	___awdiv@divisor,w
  1647  016E  02F2               	subwf	___awdiv@dividend,f
  1648  016F  0871               	movf	___awdiv@divisor+1,w
  1649  0170  1C03               	skipc
  1650  0171  03F3               	decf	___awdiv@dividend+1,f
  1651  0172  02F3               	subwf	___awdiv@dividend+1,f
  1652  0173                     i1l1031:
  1653  0173  1477               	bsf	___awdiv@quotient,0
  1654  0174                     i1l1033:
  1655  0174  3001               	movlw	1
  1656  0175                     u38_25:
  1657  0175  1003               	clrc
  1658  0176  0CF1               	rrf	___awdiv@divisor+1,f
  1659  0177  0CF0               	rrf	___awdiv@divisor,f
  1660  0178  3EFF               	addlw	-1
  1661  0179  1D03               	skipz
  1662  017A  2975               	goto	u38_25
  1663  017B                     i1l1035:
  1664  017B  3001               	movlw	1
  1665  017C  02F5               	subwf	___awdiv@counter,f
  1666  017D  1D03               	btfss	3,2
  1667  017E  2980               	goto	u39_21
  1668  017F  2981               	goto	u39_20
  1669  0180                     u39_21:
  1670  0180  295C               	goto	i1l1027
  1671  0181                     u39_20:
  1672  0181                     i1l1037:
  1673  0181  0876               	movf	___awdiv@sign,w
  1674  0182  1903               	btfsc	3,2
  1675  0183  2985               	goto	u40_21
  1676  0184  2986               	goto	u40_20
  1677  0185                     u40_21:
  1678  0185  298B               	goto	i1l1041
  1679  0186                     u40_20:
  1680  0186                     i1l1039:
  1681  0186  09F7               	comf	___awdiv@quotient,f
  1682  0187  09F8               	comf	___awdiv@quotient+1,f
  1683  0188  0AF7               	incf	___awdiv@quotient,f
  1684  0189  1903               	skipnz
  1685  018A  0AF8               	incf	___awdiv@quotient+1,f
  1686  018B                     i1l1041:
  1687  018B  0878               	movf	___awdiv@quotient+1,w
  1688  018C  00F1               	movwf	?___awdiv+1
  1689  018D  0877               	movf	___awdiv@quotient,w
  1690  018E  00F0               	movwf	?___awdiv
  1691  018F                     i1l360:
  1692  018F  0008               	return
  1693  0190                     __end_of___awdiv:
  1694  007E                     btemp	set	126	;btemp
  1695  007E                     wtemp0	set	126
  1696                           
  1697                           	psect	idloc
  1698                           
  1699                           ;Config register IDLOC0 @ 0x2000
  1700                           ;	unspecified, using default values
  1701  2000                     	org	8192
  1702  2000  3FFF               	dw	16383
  1703                           
  1704                           ;Config register IDLOC1 @ 0x2001
  1705                           ;	unspecified, using default values
  1706  2001                     	org	8193
  1707  2001  3FFF               	dw	16383
  1708                           
  1709                           ;Config register IDLOC2 @ 0x2002
  1710                           ;	unspecified, using default values
  1711  2002                     	org	8194
  1712  2002  3FFF               	dw	16383
  1713                           
  1714                           ;Config register IDLOC3 @ 0x2003
  1715                           ;	unspecified, using default values
  1716  2003                     	org	8195
  1717  2003  3FFF               	dw	16383
  1718                           
  1719                           	psect	config
  1720                           
  1721                           ;Config register CONFIG1 @ 0x2007
  1722                           ;	Oscillator Selection bits
  1723                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1724                           ;	Watchdog Timer Enable bit
  1725                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1726                           ;	Power-up Timer Enable bit
  1727                           ;	PWRTE = OFF, PWRT disabled
  1728                           ;	RE3/MCLR pin function select bit
  1729                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1730                           ;	Code Protection bit
  1731                           ;	CP = OFF, Program memory code protection is disabled
  1732                           ;	Data Code Protection bit
  1733                           ;	CPD = OFF, Data memory code protection is disabled
  1734                           ;	Brown Out Reset Selection bits
  1735                           ;	BOREN = OFF, BOR disabled
  1736                           ;	Internal External Switchover bit
  1737                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1738                           ;	Fail-Safe Clock Monitor Enabled bit
  1739                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1740                           ;	Low Voltage Programming Enable bit
  1741                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1742                           ;	In-Circuit Debugger Mode bit
  1743                           ;	DEBUG = 0x1, unprogrammed default
  1744  2007                     	org	8199
  1745  2007  20D4               	dw	8404
  1746                           
  1747                           ;Config register CONFIG2 @ 0x2008
  1748                           ;	Brown-out Reset Selection bit
  1749                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1750                           ;	Flash Program Memory Self Write Enable bits
  1751                           ;	WRT = OFF, Write protection off
  1752  2008                     	org	8200
  1753  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        21
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80     30      59
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0      70
                                              6 BANK0     24    24      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  6     6      0    1204
                                              0 BANK0      6     6      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     600
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     604
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _isr (ROOT)
   ___awdiv
   ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1E      3B       5       73.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      49      12        0.0%
ABS                  0      0      49       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Sat Apr 16 14:42:31 2022

                      _i 0052                        pc 0002             ___awdiv@sign 0076  
                     fsr 0004                      l121 0297                      l961 026B  
                    l971 027C                      l963 0271                      l955 024D  
                    l981 028A                      l973 0280                      l965 0272  
                    l957 0251                      l991 028F                      l983 028B  
                    l975 0283                      l967 0278                      l959 0252  
                    l993 0290                      l985 028C                      l977 0286  
                    l969 027B                      l995 0291                      l987 028D  
                    l979 0287                      l997 0292                      l989 028E  
                    l999 0296                      u600 01C8                      u601 01C7  
                    u617 01CE                      u570 019F                      u580 01B1  
                    u581 01B0                      u590 01BA                      u591 01B9  
                    _isr 0032                      fsr0 0004                      indf 0000  
           ___awmod@sign 0076                     l1151 0190                     l1161 01BA  
                   l1153 0195                     l1163 01BF                     l1171 01D4  
                   l1155 01AC                     l1173 01DE                     l1165 01C8  
                   l1157 01AD                     l1175 01E7                     l1167 01CA  
                   l1159 01B1                     l1169 01D1                     ?_isr 0070  
                   i1l60 00D2                     i1l65 011D                     i1l59 00B9  
                   i1l68 0120                     _TMR0 0001                     _main 0190  
                   btemp 007E                     start 0010                    ??_isr 0020  
                  ?_main 0070          __end_of___awdiv 0190          __end_of___awmod 024D  
                  _ANSEL 0188          ___awdiv@divisor 0070                    i1l360 018F  
                  i1l373 024C          ___awdiv@counter 0075                    u31_20 012E  
                  u31_21 012D                    u40_20 0186                    u32_20 0139  
                  u40_21 0185                    u32_21 0138                    u33_20 014A  
                  u41_20 01F9                    u33_21 0149                    u41_21 01F8  
                  u42_20 0204                    u50_20 0036                    u42_21 0203  
                  u50_21 0035                    u34_25 014E                    u35_20 015C  
                  u43_20 020F                    u51_20 003F                    u35_21 015B  
                  u43_21 020E                    u51_21 003E                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  u52_20 004B                    u52_21 004A                    u36_25 015D  
                  u44_25 0213                    u37_20 016D                    u45_20 0221  
                  u53_20 00B2                    u37_21 016C                    u45_21 0220  
                  u53_21 00B1                    u37_25 0169                    u46_20 022B  
                  u54_20 00CB                    u46_21 022A                    u54_21 00CA  
                  u38_25 0175                    u46_25 0227                    u39_20 0181  
                  u55_20 00E3                    u39_21 0180                    u55_21 00E2  
                  u47_25 0232                    u48_20 023E                    u56_20 00EE  
                  u48_21 023D                    u56_21 00ED                    u49_20 0243  
                  u49_21 0242                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _valor 007A  
                  _setup 024D                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0013             __end_of_main 01F4  
                 ??_main 0026                   _ADRESH 001E         ___awdiv@dividend 0072  
                 ?_setup 0070                   _ANSELH 0189                   i1l1001 0129  
                 i1l1011 0139                   i1l1003 012A                   i1l1021 014D  
                 i1l1013 013E                   i1l1005 012E                   i1l1101 00A3  
                 i1l1031 0173                   i1l1023 0154                   i1l1015 0142  
                 i1l1007 0133                   i1l1111 00B7                   i1l1103 00A4  
                 i1l1041 018B                   i1l1033 0174                   i1l1025 0158  
                 i1l1017 0144                   i1l1009 0135                   i1l1121 00E3  
                 i1l1113 00C4                   i1l1105 00A5                   i1l1035 017B  
                 i1l1027 015C                   i1l1019 014A                   i1l1051 01FE  
                 i1l1131 00EF                   i1l1123 00E5                   i1l1115 00CB  
                 i1l1107 00AB                   i1l1029 016D                   i1l1037 0181  
                 i1l1061 0212                   i1l1053 0200                   i1l1045 01F4  
                 i1l1133 00F8                   i1l1141 0108                   i1l1117 00D0  
                 i1l1109 00B2                   i1l1125 00E9                   i1l1039 0186  
                 i1l1071 0231                   i1l1063 0219                   i1l1055 0204  
                 i1l1047 01F5                   i1l1143 011E                   i1l1135 0101  
                 i1l1119 00DD                   i1l1127 00EA                   i1l1073 0238  
                 i1l1065 021D                   i1l1057 0209                   i1l1049 01F9  
                 i1l1137 0105                   i1l1067 0221                   i1l1059 020F  
                 i1l1075 023E                   i1l1091 004B                   i1l1083 0032  
                 i1l1077 0243                   i1l1069 022B                   i1l1093 004F  
                 i1l1085 0036                   i1l1079 0248                   i1l1095 0065  
                 i1l1087 003F                   i1l1097 007B                   i1l1089 0042  
                 i1l1099 008F                   i1l1197 0112                ??___awdiv 0074  
              ??___awmod 0074         ___awdiv@quotient 0077          ___awmod@divisor 0070  
        ___awmod@counter 0075                   saved_w 007E  __end_of__initialization 002E  
         __pcstackCOMMON 0070             __pidataBANK0 0298            __end_of_setup 0298  
         _OPTION_REGbits 0081                  ??_setup 0026               __pbssBANK0 0053  
             __pmaintext 0190               __pintentry 0004                  ___awdiv 0129  
                ___awmod 01F4                  _decenas 007C                  __ptext1 024D  
                __ptext2 0032                  __ptext3 01F4                  __ptext4 0129  
       ___awmod@dividend 0072     end_of_initialization 002E                _PORTCbits 0007  
    start_initialization 0013              __end_of_isr 0129               init_fetch0 02AD  
            __pdataBANK0 003E              __pbssCOMMON 0079                ___latbits 0002  
          __pcstackBANK0 0020                _centenas2 0058                _centenas3 0056  
               ?___awdiv 0070                 ?___awmod 0070        interrupt_function 0004  
              _remainder 0079                 _PIE1bits 008C                 _PIR1bits 000C  
              main@F1309 003E                _unidades2 005A               _ADCON0bits 001F  
             _ADCON1bits 009F                main@tabla 002A                 _decenas2 0059  
               _decenas3 0057                 _centenas 007B         _display_centenas 0053  
               _unidades 007D         _display_unidades 0055               _INTCONbits 000B  
               init_ram0 02B1                 intlevel1 0000          _display_decenas 0054  
             _OSCCONbits 008F  
